# .circleci/config.yml
#
# This file configures the CircleCI 2.0 build.
#
# Documentation:
# - Overview: https://circleci.com/docs/2.0/workflows/
# - Caching: https://circleci.com/docs/2.0/caching/
#
# Things to know:
# - every job is a container
# - cache is used for data that can potentially be reused between builds, provided we can
#   be sure it will not influence the build result other than by speeding it up.
# - cache is immutable. Sometimes we need to flush the cache, but we can't. That's why there is this
#   `v1-` at the beginning. Increment it when you need to change the cache content.
# - because we use `npm ci`, we cache the `~/.npm` directory and not `node_modules` which
#   is erased by `npm ci`.
# - to make sure the cache is indexed by the `package.json` and `package-lock.json` files,
#   we concatenate them into a temporary file whose checksum we use as part of the cache key.
# - for data that is specific to a build (commit), like the source code downloaded from github,
#   we use Circle CI's workspace feature to transport it between jobs.

version: 2.0

workflows:
  version: 2
  test:
    jobs:
      - test

jobs:
  test:
    docker:
      - image: cimg/node:19.8.0
      - image: postgres:14.6-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - run: cat package*.json > cachekey
      - restore_cache:
          keys:
            - v1-api-npm-{{ checksum "cachekey" }}
      - run: npm ci
      - save_cache:
          key: v1-api-npm-{{ checksum "cachekey" }}
          paths:
            - ~/.npm
      - run :
          name : Add PG package key
          command: |
            wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      - run :
          name : Add PG package
          command:
            echo "deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
      - run :
          name : Refresh package cache
          command: |
            sudo apt update
      - run :
          name : Install PostgreSQL client package
          command: |
            sudo apt install postgresql-client-14
      - run :
          name : Checking pg_dump version
          command: |
            pg_dump --version
      - run :
          name : Checking pg_restore version
          command: |
            pg_restore --version
      - run:
          name: Waiting for PostgreSQL to start
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 2
            done
            echo Failed waiting for Postgres && exit 1
      - run:
          command: |
            npm run preinstall
      - run:
          name: Run test
          command: |
            npm run lint
            npm run test

